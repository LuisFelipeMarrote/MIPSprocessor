library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;
entity memory_instruc is
    port (
        I_ROM_EN    : in  std_logic;
        I_ROM_ADDR  : in  std_logic_vector(7 downto 0);
        O_ROM_DATA  : out std_logic_vector(31 downto 0));
end entity memory_instruc;

architecture Behavioral of memory_instruc is
   
    type rom_type is array (0 to 31) of std_logic_vector(31 downto 0);
    
    signal rom : rom_type := (
        x"01234567", x"89ABCDEF", x"01234567", x"89ABCDEF",
        x"01234567", x"89ABCDEF", x"01234567", x"89ABCDEF",
        x"01234567", x"89ABCDEF", x"01234567", x"89ABCDEF",
        x"01234567", x"89ABCDEF", x"01234567", x"89ABCDEF",
        x"01234567", x"89ABCDEF", x"01234567", x"89ABCDEF",
        x"01234567", x"89ABCDEF", x"01234567", x"89ABCDEF",
        x"01234567", x"89ABCDEF", x"01234567", x"89ABCDEF",
        x"01234567", x"89ABCDEF", x"01234567", x"89ABCDEF"
    );
	 
begin
    process(I_ROM_EN)
        variable index : integer;
    begin
        if I_ROM_EN = '1' then
            index := to_integer(unsigned(I_ROM_ADDR));
            O_ROM_DATA <= rom(index);
        end if;
    end process;
end Behavioral;

